name: Ubuntu Linux

on: [push, pull_request]

env:
  APT_INSTALL: sudo apt-get install -yq --no-install-suggests --no-install-recommends --allow-unauthenticated --allow-downgrades --allow-change-held-packages

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # gcc 11
          - cxx: g++-11
            os: ubuntu-20.04
            std: 20
            install_cmd: ${APT_INSTALL} g++-11
          # gcc 10
          - cxx: g++-10
            os: ubuntu-20.04
            std: 20
          # gcc 9
          - cxx: g++-9
            os: ubuntu-20.04
            std: 20
          # gcc 8
          - cxx: g++-8
            os: ubuntu-20.04
            std: 20
            install_cmd: ${APT_INSTALL} g++-8
          # gcc 7
          - cxx: g++-7
            os: ubuntu-18.04
            std: 17
          # gcc 6
          - cxx: g++-6
            os: ubuntu-18.04
            std: 14
            install_cmd: ${APT_INSTALL} g++-6
          # gcc 5
          - cxx: g++-5
            os: ubuntu-18.04
            std: 14
            install_cmd: ${APT_INSTALL} g++-5

          # clang 13
          - cxx: clang++-13
            os: ubuntu-20.04
            std: 20
            install_cmd: |
              wget https://apt.llvm.org/llvm.sh
              chmod +x llvm.sh
              sudo ./llvm.sh 13
          # clang 12
          - cxx: clang++-12
            os: ubuntu-20.04
            std: 20
          # clang 10
          - cxx: clang++-10
            os: ubuntu-20.04
            std: 20
          # clang 6.0
          - cxx: clang++-6.0
            os: ubuntu-20.04
            std: 17
            install_cmd: ${APT_INSTALL} clang-6.0

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create Build Environment
        run: |
          mkdir ${{ runner.workspace }}/install
          cd ${{ runner.workspace }}/install
          
          sudo locale-gen en_US.UTF-8
          sudo locale-gen fi_FI.UTF-8
          sudo update-locale
          sudo locale -a
          
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get --allow-unauthenticated -yq update
          ${{ matrix.install_cmd }}
          
          cd ${{ runner.workspace }}
          mkdir ${{ runner.workspace }}/build

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        env:
          CXX: ${{ matrix.cxx }}
          MAX_STD: ${{ matrix.std }}
        shell: bash
        run: |
          standards="11 14 17 20"
          for std in $standards; do
            echo "$@"
            cmake -DSCN_BUILD_LOCALIZED_TESTS=ON -DSCN_WERROR=ON -DCMAKE_BUILD_TYPE=Debug \
                  -DCMAKE_CXX_STANDARD=$std \
                  "$@" $GITHUB_WORKSPACE
            make -k -j
            ctest --output-on-failure
            make clean

            if [[ "${std}" == "${MAX_STD}" ]]; then
              break
            fi
          done
